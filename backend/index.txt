// // Import necessary libraries
// const express = require('express');
// const multer = require('multer');
// const fs = require('fs');
// const path = require('path');
// const PDFDocument = require('pdfkit');
// const cors = require('cors');

// const app = express();
// const upload = multer({ dest: 'uploads/' });

// app.use(cors());
// app.use(express.json());

// // Endpoint to convert Word to PDF
// app.post('/api/convert-to-pdf', upload.single('file'), (req, res) => {
//   const file = req.file;
//   if (!file) {
//     return res.status(400).json({ error: 'No file uploaded' });
//   }

//   const fileExtension = path.extname(file.originalname).toLowerCase();
//   if (fileExtension !== '.docx' && fileExtension !== '.doc') {
//     fs.unlinkSync(file.path); // Clean up uploaded file
//     return res.status(400).json({ error: 'Invalid file type. Please upload a Word document.' });
//   }

//   try {
//     const pdfDoc = new PDFDocument();
//     res.setHeader('Content-Type', 'application/pdf');
//     res.setHeader('Content-Disposition', 'attachment; filename="converted-file.pdf"');

//     pdfDoc.pipe(res);

//     // Example content (replace with actual Word file content)
//     pdfDoc.fontSize(12).text(`Successfully converted: ${file.originalname}`, {
//       align: 'center',
//     });

//     pdfDoc.end();

//     // Clean up uploaded file after the response has been sent
//     pdfDoc.on('finish', () => {
//       fs.unlinkSync(file.path);
//     });

//   } catch (error) {
//     console.error('Error generating PDF:', error);
//     res.status(500).json({ error: 'Internal Server Error' });
//     fs.unlinkSync(file.path); // Ensure the uploaded file is cleaned up in case of an error
//   }
// });

// const PORT = 5000;
// app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));



// const express = require('express');
// const multer = require('multer');
// const fs = require('fs');
// const path = require('path');
// const cors = require('cors');
// const docxConverter = require('docx-pdf');  // Library for DOCX to PDF conversion

// const app = express();
// const upload = multer({ dest: 'uploads/' });

// app.use(cors());
// app.use(express.json());

// // Endpoint to convert Word to PDF
// app.post('/api/convert-to-pdf', upload.single('file'), (req, res) => {
//   const file = req.file;
//   if (!file) {
//     return res.status(400).json({ error: 'No file uploaded' });
//   }

//   const fileExtension = path.extname(file.originalname).toLowerCase();
//   if (fileExtension !== '.docx' && fileExtension !== '.doc') {
//     fs.unlinkSync(file.path); // Clean up uploaded file
//     return res.status(400).json({ error: 'Invalid file type. Please upload a Word document.' });
//   }

//   try {
//     // Convert DOCX to PDF
//     const outputFilePath = `uploads/${file.filename}.pdf`;  // Define the output PDF file path

//     docxConverter(file.path, outputFilePath, function (err, result) {
//       if (err) {
//         console.error('Error converting DOCX to PDF:', err);
//         fs.unlinkSync(file.path); // Clean up uploaded file
//         return res.status(500).json({ error: 'Error converting DOCX to PDF' });
//       }

//       // Send the generated PDF file as response
//       res.setHeader('Content-Type', 'application/pdf');
//       res.setHeader('Content-Disposition', `attachment; filename="${file.originalname.replace(path.extname(file.originalname), '.pdf')}"`);
      
//       const fileStream = fs.createReadStream(outputFilePath);
//       fileStream.pipe(res);

//       // Clean up the uploaded DOCX file and generated PDF after the response is sent
//       fileStream.on('end', () => {
//         fs.unlinkSync(file.path); // Remove the uploaded DOCX file
//         fs.unlinkSync(outputFilePath); // Remove the generated PDF file
//       });
//     });
//   } catch (error) {
//     console.error('Error generating PDF:', error);
//     res.status(500).json({ error: 'Internal Server Error' });
//     fs.unlinkSync(file.path); // Ensure the uploaded file is cleaned up in case of an error
//   }
// });

// const PORT = 5000;
// app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));



// const express = require('express');
// const multer = require('multer');
// const fs = require('fs');
// const path = require('path');
// const PDFDocument = require('pdfkit');
// const cors = require('cors');
// const { Document, Packer } = require('docx'); // Library to read .docx files
// const { readFile } = require('fs/promises');

// const app = express();
// const upload = multer({ dest: 'uploads/' });

// app.use(cors());
// app.use(express.json());

// // Endpoint to convert Word to PDF
// app.post('/api/convert-to-pdf', upload.single('file'), async (req, res) => {
//   const file = req.file;
//   if (!file) {
//     return res.status(400).json({ error: 'No file uploaded' });
//   }

//   const fileExtension = path.extname(file.originalname).toLowerCase();
//   if (fileExtension !== '.docx') {
//     fs.unlinkSync(file.path); // Clean up uploaded file
//     return res.status(400).json({ error: 'Invalid file type. Please upload a .docx file.' });
//   }

//   try {
//     const wordFile = await readFile(file.path);
//     const doc = await Packer.loadBuffer(wordFile);
//     const pdfDoc = new PDFDocument();

//     res.setHeader('Content-Type', 'application/pdf');
//     res.setHeader('Content-Disposition',`attachment; filename="${file.originalname.split('.')[0]}.pdf"`
//     );

//     pdfDoc.pipe(res);

//     // Parse and add content to PDF
//     const paragraphs = doc.paragraphs || [];
//     paragraphs.forEach((paragraph) => {
//       if (paragraph.text) {
//         pdfDoc.fontSize(12).text(paragraph.text, { align: 'left' });
//       }
//       // Here you can handle other types of content like images
//     });

//     pdfDoc.end();

//     // Clean up uploaded file after the response has been sent
//     pdfDoc.on('finish', () => {
//       fs.unlinkSync(file.path);
//     });
//   } catch (error) {
//     console.error('Error generating PDF:', error);
//     res.status(500).json({ error: 'Internal Server Error' });
//     fs.unlinkSync(file.path); // Ensure the uploaded file is cleaned up in case of an error
//   }
// });

// const PORT = 5000;
// app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));




// const express = require('express');
// const multer = require('multer');
// const fs = require('fs');
// const path = require('path');
// const PDFDocument = require('pdfkit');
// const cors = require('cors');
// const mammoth = require('mammoth'); // Library for extracting text from .docx files

// const app = express();
// const upload = multer({ dest: 'uploads/' });

// app.use(cors());
// app.use(express.json());

// // Endpoint to convert Word to PDF
// app.post('/api/convert-to-pdf', upload.single('file'), async (req, res) => {
//   const file = req.file;
//   if (!file) {
//     return res.status(400).json({ error: 'No file uploaded' });
//   }

//   const fileExtension = path.extname(file.originalname).toLowerCase();
//   if (fileExtension !== '.docx') {
//     fs.unlinkSync(file.path); // Clean up uploaded file
//     return res.status(400).json({ error: 'Invalid file type. Please upload a .docx file.' });
//   }

//   try {
//     // Read the uploaded .docx file
//     const wordFile = fs.readFileSync(file.path);

//     // Extract text from .docx using Mammoth
//     const { value: extractedText } = await mammoth.extractRawText({ buffer: wordFile });

//     // Create a PDF using PDFKit
//     const pdfDoc = new PDFDocument();
//     res.setHeader('Content-Type', 'application/pdf');
//     res.setHeader(
//       'Content-Disposition',
//       `attachment; filename="${file.originalname.split('.')[0]}.pdf"`
//     );

//     pdfDoc.pipe(res);
//     pdfDoc.fontSize(8).text(extractedText, { align: 'left' });
//     pdfDoc.end();

//     // Clean up the uploaded file after the response is sent
//     pdfDoc.on('finish', () => {
//       fs.unlinkSync(file.path);
//     });
//   } catch (error) {
//     console.error('Error generating PDF:', error);
//     res.status(500).json({ error: 'Internal Server Error' });
//     fs.unlinkSync(file.path); // Ensure the uploaded file is cleaned up in case of an error
//   }
// });

// const PORT = 5000;
// app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));

